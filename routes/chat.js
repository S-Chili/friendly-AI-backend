const express = require("express");
const router = express.Router();
const axios = require("axios");
const Message = require("../models/messageModel");

router.post("/", async (req, res) => {
  const { chatId, message } = req.body;

  if (!message || !chatId) {
    return res.status(400).json({ error: "chatId —ñ message –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ" });
  }

  try {
    const pythonResponse = await axios.post(
      "https://anastasiiame.pythonanywhere.com/ask",
      {
        text: message,
      }
    );

    // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û –¢–£–¢: –±–µ—Ä–µ–º–æ –ª–∏—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—è "response"
    const botResponseText = pythonResponse.data.response;

    if (!botResponseText) {
      return res
        .status(400)
        .json({ response: "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!" });
    }

    // üì© –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
    const newMessage = new Message({
      chatId,
      userMessage: message.trim(),
      botResponse: botResponseText, // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û –¢–£–¢
    });

    await newMessage.save();

    res.json({ response: botResponseText }); // ‚úÖ –Ü –¢–£–¢
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", error);
    res.status(500).json({ error: "–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è" });
  }
});

module.exports = router;

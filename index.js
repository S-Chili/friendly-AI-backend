require("dotenv").config();
const express = require("express");
const cors = require("cors");
const connectDB = require("./db");
const { trainModel } = require("./mlModel");
const chatRoutes = require("./routes/chat");
const {
  getChats,
  createChat,
  getMessages,
  deleteChat,
} = require("./controllers/index");

const app = express();
app.use(express.json());
app.use(cors());

(async () => {
  try {
    console.log("üöÄ –ù–∞–≤—á–∞–Ω–Ω—è AI-–º–æ–¥–µ–ª—ñ...");
    await trainModel();
    console.log("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –Ω–∞–≤—á–µ–Ω–∞!");

    console.log("üîÑ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...");
    await connectDB();
    console.log("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!");

    console.log("üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...");
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => console.log(`üéâ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:", error);
    process.exit(1);
  }
})();

app.use("/chat", chatRoutes);

app.get("/chats", getChats);
app.get("/chats/:chatId/messages", getMessages);
app.post("/chats", createChat);
app.delete("/chats/:chatId", deleteChat);

// require("dotenv").config();
// const express = require("express");
// const cors = require("cors");
// const connectDB = require("./db");
// const chatRoutes = require("./routes/chat");
// const {
//   getChats,
//   createChat,
//   getMessages,
//   deleteChat,
// } = require("./controllers/index");
// const { loadClassifier, trainModel } = require("./mlModel");

// (async () => {
//   await loadClassifier();
//   // –ü–æ—Ç—ñ–º –∑–∞–ø—É—Å–∫–∞—î—à Express –∞–±–æ trainModel() –≤—Ä—É—á–Ω—É, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
// })();

// const app = express();
// app.use(express.json());
// app.use(cors());

// (async () => {
//   try {
//     // console.log("üöÄ –ù–∞–≤—á–∞–Ω–Ω—è AI-–º–æ–¥–µ–ª—ñ...");
//     // trainModel();
//     // console.log("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –Ω–∞–≤—á–µ–Ω–∞!");

//     console.log("üîÑ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...");
//     await connectDB();
//     console.log("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!");
//     console.log("üöÄ –ù–∞–≤—á–∞–Ω–Ω—è AI-–º–æ–¥–µ–ª—ñ...");
//     trainModel();
//     console.log("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –Ω–∞–≤—á–µ–Ω–∞!");
//     console.log("üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...");
//     const PORT = process.env.PORT || 3000;
//     app.listen(PORT, () => console.log(`üéâ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
//   } catch (error) {
//     console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:", error);
//     process.exit(1);
//   }
// })();

// app.use("/chat", chatRoutes);

// app.get("/chats", getChats);
// app.get("/chats/:chatId/messages", getMessages);
// app.post("/chats", createChat);
// app.delete("/chats/:chatId", deleteChat);

require("dotenv").config();
const express = require("express");
const cors = require("cors");
const fs = require("fs");
const path = require("path");

const connectDB = require("./db");
const chatRoutes = require("./routes/chat");
const {
  getChats,
  createChat,
  getMessages,
  deleteChat,
} = require("./controllers/index");

const { loadClassifier, trainModel } = require("./mlModel");

const app = express();
app.use(express.json());
app.use(cors());

// üìÅ –®–ª—è—Ö –¥–æ classifier.json
const CLASSIFIER_PATH = path.join(__dirname, "classifier.json");

const startServer = async () => {
  try {
    console.log("üîÑ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB...");
    await connectDB();
    console.log("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!");

    // üß† –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞
    if (fs.existsSync(CLASSIFIER_PATH)) {
      console.log("üìÇ –ó–Ω–∞–π–¥–µ–Ω–æ classifier.json. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä...");
      await loadClassifier();
    } else {
      console.log("‚ö†Ô∏è –§–∞–π–ª –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–æ—á–∏–Ω–∞—î–º–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è...");
      await trainModel();
    }

    // üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => console.log(`üéâ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:", error);
    process.exit(1);
  }
};

// ‚ú® –ó–∞–ø—É—Å–∫
startServer();

// üì¶ –†–æ—É—Ç–∏
app.use("/chat", chatRoutes);

app.get("/chats", getChats);
app.get("/chats/:chatId/messages", getMessages);
app.post("/chats", createChat);
app.delete("/chats/:chatId", deleteChat);
